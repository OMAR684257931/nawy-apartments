// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FinishingStatus {
  Finished
  SemiFinished
  CoreAndShell
}

enum PropertyType {
  Apartment
  Villa
  Duplex
  Penthouse
  Chalet
  Studio
  Townhouse
}

enum SaleType {
  DeveloperSale
  Resale
}

model Developer {
  id          String   @id @default(uuid())
  name        String
  description String?
  compounds   Compound[]
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("developers")
}

model Compound {
  id              String          @id @default(uuid())
  name            String
  slug            String          @unique
  location        String
  description     String?
  deliveryYear    Int             @map("delivery_year")
  finishingStatus FinishingStatus @map("finishing_status")
  mapUrl          String?         @map("map_url")
  developerId     String          @map("developer_id")
  developer       Developer       @relation(fields: [developerId], references: [id], onDelete: Cascade)
  units           Unit[]
  createdAt       DateTime        @default(now()) @map("created_at")

  @@map("compounds")
}

model Unit {
  id              String      @id @default(uuid())
  title           String
  referenceNumber String      @unique @map("reference_number")
  unitNumber      String      @map("unit_number")
  price           Decimal     @db.Decimal(12, 2)
  bedrooms        Int
  unitArea        Decimal     @map("unit_area") @db.Decimal(8, 2)
  propertyType    PropertyType @map("property_type")
  amenities       String[]
  saleType        SaleType    @map("sale_type")
  galleryImages   String[]    @map("gallery_images")
  deliveryYear    Int         @map("delivery_year")
  compoundId      String      @map("compound_id")
  compound        Compound    @relation(fields: [compoundId], references: [id], onDelete: Cascade)
  paymentPlan     PaymentPlan?
  createdAt       DateTime    @default(now()) @map("created_at")

  @@map("units")
}

model PaymentPlan {
  id            String   @id @default(uuid())
  unitId        String   @unique @map("unit_id")
  unit          Unit     @relation(fields: [unitId], references: [id], onDelete: Cascade)
  downPayment   Decimal  @map("down_payment") @db.Decimal(12, 2)
  installment   Decimal  @db.Decimal(12, 2)
  durationYears Int      @map("duration_years")
  createdAt     DateTime @default(now()) @map("created_at")

  @@map("payment_plans")
} 